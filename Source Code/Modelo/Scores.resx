<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>